{"version":3,"file":"cms.ec69adb0f95291d2b874.hot-update.js","sources":["webpack:///./src/components/Map.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport LocationIcon from \"../img/location.svg\";\n\nconst Map = (props) => {\n  if (!props.latitude || !props.longitude || !props.link) {\n    return null;\n  }\n  return (\n    <GoogleMap\n      defaultOptions={{ styles: exampleMapStyles }}\n      defaultZoom={15}\n      defaultCenter={{ lat: props.latitude, lng: props.longitude }}\n    >\n      <Marker\n        position={{ lat: props.latitude, lng: props.longitude }}\n        icon={{ url: LocationIcon }}\n        onClick={() => window.open(props.link)}\n      />\n    </GoogleMap>\n  );\n};\n\nMap.propTypes = {\n  link: PropTypes.string,\n  latitude: PropTypes.number,\n  longitude: PropTypes.number,\n};\n\nexport default withScriptjs(withGoogleMap(Map));\n\nconst exampleMapStyles = [\n  {\n    featureType: \"all\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"all\",\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#000000\",\n      },\n      {\n        lightness: 13,\n      },\n    ],\n  },\n  {\n    featureType: \"administrative\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#000000\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        color: \"#144b53\",\n      },\n      {\n        lightness: 14,\n      },\n      {\n        weight: 1.4,\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#08304b\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#0c4152\",\n      },\n      {\n        lightness: 5,\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#000000\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        color: \"#0b434f\",\n      },\n      {\n        lightness: 25,\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#000000\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        color: \"#0b3d51\",\n      },\n      {\n        lightness: 16,\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#000000\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#146474\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#021019\",\n      },\n    ],\n  },\n];\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AADA;AAEA;AAEA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAPA;AAaA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AAVA;AAgBA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAPA;AAaA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAPA;AAaA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAPA;AAaA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AACA;AAEA;AADA;AAJA;;;;;;;;;;AA1JA;AA2BA;;;;;;;;;;;;;;A","sourceRoot":""}